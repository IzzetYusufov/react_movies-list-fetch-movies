{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","query","setQuery","_useState5","_useState6","movieToFind","setMovieToFind","inputRef","useRef","_useState7","_useState8","isError","setIsError","_useState9","_useState10","isLoading","setIsLoading","useEffect","current","focus","handleSubmitionForm","event","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","toLowerCase","trim","response","Title","Plot","Poster","imdbID","console","warn","finally","_Fragment","onSubmit","htmlFor","type","ref","value","onKeyUp","code","onChange","target","id","placeholder","classNames","disabled","onClick","findIndex","movieItem","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d196ff6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport { useEffect, useRef, useState } from 'react';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [movieToFind, setMovieToFind] = useState<string | null>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [movie]);\n\n  const handleSubmitionForm = (event: React.FormEvent<HTMLFormElement>\n  | React.KeyboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    if (query === movieToFind) {\n      return;\n    }\n\n    if (query) {\n      setIsLoading(true);\n\n      getMovie(query.toLowerCase().trim())\n        .then((response) => {\n          if ('Error' in response) {\n            setIsError(true);\n\n            return;\n          }\n\n          setMovieToFind(query);\n\n          setMovie({\n            title: response.Title,\n            description: response.Plot,\n            imgUrl: response.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : response.Poster,\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n            imdbId: response.imdbID,\n          });\n        })\n        // eslint-disable-next-line no-console\n        .catch(() => console.warn('Server is not responding'))\n        .finally(() => setIsLoading(false));\n    }\n\n    setMovieToFind(query);\n  };\n\n  const handleAddToTheList = () => {\n    const findMovieIndex = movies\n      .findIndex(movieItem => movieItem.imdbId === movie?.imdbId);\n\n    if (findMovieIndex < 0 && movie) {\n      setMovie(null);\n      setMovieToFind('');\n      setQuery('');\n      setMovies([...movies, movie]);\n    } else {\n      setMovie(null);\n      setMovieToFind('');\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => handleSubmitionForm(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              ref={inputRef}\n              value={query}\n              onKeyUp={(event) => (\n                event.code === 'Enter' && handleSubmitionForm(event)\n              )}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setIsError(false);\n              }}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': isError },\n              )}\n            />\n          </div>\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddToTheList()}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cefde096';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}